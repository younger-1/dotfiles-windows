{
    "FSharp.useSdkScripts": true,
    "FSharp.suggestGitignore": false,
    "editor.fontSize": 16,
    "editor.formatOnSave": true,
    "editor.fontFamily": "'FuraCode NF', 'JetBrainsMono NF', 'Cascadia Code', 'SauceCodePro NF Light', 'DejaVuSansMono NF', Consolas",
    "terminal.integrated.fontFamily": "'JetBrainsMono NF'",
    "editor.lineNumbers": "relative",
    "editor.minimap.renderCharacters": false,
    "editor.cursorBlinking": "expand",
    "editor.quickSuggestions": {
        "other": true,
        "comments": true,
        "strings": true
    },
    "editor.codeActionsOnSave": {
        "source.fixAll.markdownlint": true
    },
    "editor.suggest.localityBonus": true,
    "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?【】《》（）‘’“”；：，。、·？…￥",
    "editor.linkedEditing": true,
    "editor.dragAndDrop": false,
    "terminal.integrated.scrollback": 5000,
    "terminal.integrated.shellArgs.windows": "-NoLogo",
    "terminal.integrated.automationShell.windows": "C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
    "terminal.integrated.profiles.windows": {
        // Add a PowerShell profile that doesn't run the profile
        "PowerShell (No Profile)": {
            // Some sources are available which auto detect complex cases
            "source": "PowerShell",
            "args": [
                "-NoProfile"
            ],
            // Name the terminal "PowerShell (No Profile)" to differentiate it
            "overrideName": true
        }
    },
    "terminal.integrated.commandsToSkipShell": [
        "workbench.action.toggleSidebarVisibility"
    ],
    "emmet.triggerExpansionOnTab": true,
    "emmet.syntaxProfiles": {
        "html": {
            "filters": "bem"
        }
    },
    "workbench.editor.highlightModifiedTabs": true,
    "workbench.sash.size": 8,
    "workbench.iconTheme": "eq-material-theme-icons",
    "workbench.colorCustomizations": {
        "editorIndentGuide.background": "#2ddaf13f",
        "bookmarks.lineBackground": "#f7970759",
        "editorRuler.foreground": "#95a5a6a6"
    },
    "workbench.commandPalette.preserveInput": true,
    "search.exclude": {
        "**/.class": true,
        "**/.git": true,
        "**/.hg": true,
        "**/.idea": true,
        "**/.svn": true
    },
    "files.exclude": {
        "**/.classpath": true,
        "**/.project": true,
        "**/.settings": true,
        "**/.factorypath": true
    },
    "workbench.editor.enablePreviewFromQuickOpen": true,
    "vim.smartRelativeLine": true,
    "bookmarks.saveBookmarksInProject": true,
    "search.searchEditor.reusePriorSearchConfiguration": true,
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    // "bracket-pair-colorizer-2.colors": [
    //     "purple",
    //     "LightSkyBlue",
    //     "gold",
    //     "Orchid"
    // ],
    "bracket-pair-colorizer-2.colors": [
        "terminal.ansiCyan",
        "terminal.ansiMagenta",
        "terminal.ansiBlue"
    ],
    "[powershell]": {
        "editor.defaultFormatter": "ms-vscode.powershell",
        "files.encoding": "utf8bom",
        "files.autoGuessEncoding": true
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "update.enableWindowsBackgroundUpdates": false,
    "C_Cpp.clang_format_fallbackStyle": "{ BasedOnStyle: Google, IndentWidth: 4, AllowShortIfStatementsOnASingleLine: false}",
    "C_Cpp.intelliSenseCacheSize": 2000,
    // "C_Cpp.errorSquiggles": "Disabled",
    // "C_Cpp.autocomplete": "Disabled",
    // "C_Cpp.suggestSnippets": false,
    "indentRainbow.ignoreErrorLanguages": [
        "markdown",
        "python",
        "rust",
        "cpp",
        "java",
        "jsonc",
        "toml",
        "powershell"
    ],
    "sync.gist": "129cf9fd889f1d64bfea95e0ebe21a51",
    "markdown.preview.fontSize": 16,
    "leetcode.workspaceFolder": "C:\\Users\\younger\\.leetcode",
    "leetcode.endpoint": "leetcode-cn",
    "leetcode.enableSideMode": false,
    "leetcode.hint.configWebviewMarkdown": false,
    "leetcode.hint.commentDescription": false,
    "leetcode.hint.setDefaultLanguage": false,
    "leetcode.hint.commandShortcut": false,
    "leetcode.showDescription": "In Webview",
    "leetcode.filePath": {
        "default": {
            "folder": "${tag}-${difficulty}",
            "filename": "${id}.${kebab-case-name}.${ext}"
        }
    },
    "leetcode.editor.shortcuts": [
        "submit",
        "test",
        "solution",
        "description"
    ],
    "settingsSync.ignoredSettings": [
        "projectManager.vscode.baseFolders",
        "projectManager.git.baseFolders",
    ],
    "vim.useCtrlKeys": false,
    "vim.handleKeys": {
        "<C-c>": false,
        "<C-d>": true,
        "<C-i>": true,
        "<C-o>": true,
        "<C-r>": true,
        "<C-u>": true,
        "<C-v>": true,
        "<C-w>": true,
    },
    "vim.leader": "<space>",
    "vim.easymotion": true,
    "vim.sneak": true,
    "vim.replaceWithRegister": true,
    "vim.camelCaseMotion.enable": true,
    "vim.highlightedyank.color": "LightGreen",
    "vim.highlightedyank.duration": 400,
    "vim.highlightedyank.enable": true,
    "vim.commandLineModeKeyBindings": [],
    "vim.foldfix": true,
    "vim.startofline": false,
    // "vim.useSystemClipboard": true,
    // "vim.enableNeovim": true,
    "vim.autoSwitchInputMethod.enable": true,
    "vim.autoSwitchInputMethod.defaultIM": "1033",
    "vim.autoSwitchInputMethod.obtainIMCmd": "C:/Users/younger/im-select.exe",
    "vim.autoSwitchInputMethod.switchIMCmd": "C:/Users/younger/im-select.exe {im}",
    "vim.operatorPendingModeKeyBindingsNonRecursive": [
        // Bind L to $ and H to ^ makes yL and dH work like y$ and d^ respectively.
        {
            "before": [
                "L"
            ],
            "after": [
                "$"
            ]
        },
        {
            "before": [
                "H"
            ],
            "after": [
                "^"
            ]
        }
    ],
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                ":"
            ],
            "commands": [
                "workbench.action.showCommands"
            ]
        },
        {
            "before": [
                "Y"
            ],
            "after": [
                "y",
                "$"
            ]
        },
        {
            "before": [
                "j"
            ],
            "after": [
                "g",
                "j"
            ]
        },
        {
            "before": [
                "k"
            ],
            "after": [
                "g",
                "k"
            ]
        },
        {
            "before": [
                "<leader>",
                "m"
            ],
            "commands": [
                "bookmarks.toggle"
            ]
        },
        {
            "before": [
                "<leader>",
                "M"
            ],
            "commands": [
                "bookmarks.toggleLabeled"
            ]
        },
        {
            "before": [
                "<leader>",
                "l"
            ],
            "commands": [
                "bookmarks.list"
            ]
        },
        {
            "before": [
                "<leader>",
                "L"
            ],
            "commands": [
                "bookmarks.listFromAllFiles"
            ]
        },
        {
            "before": [
                "<CR>"
            ],
            "commands": [
                "editor.action.insertLineAfter"
            ]
        },
        {
            "before": [
                "<leader>",
                "<CR>"
            ],
            "commands": [
                "editor.action.insertLineBefore"
            ]
        },
        {
            "before": [
                "<leader>",
                "q"
            ],
            "commands": [
                "workbench.action.closeActiveEditor"
            ]
        },
        {
            "before": [
                "<leader>",
                "r"
            ],
            "commands": [
                "workbench.action.openRecent"
            ]
        },
        {
            "before": [
                "<leader>",
                "Q"
            ],
            "commands": [
                ":wq"
            ]
        },
        {
            "before": [
                "<leader>",
                "x"
            ],
            "commands": [
                "workbench.action.reopenClosedEditor"
            ]
        },
        {
            "before": [
                "<leader>",
                "s"
            ],
            "commands": [
                "workbench.action.files.saveWithoutFormatting"
            ]
        },
        {
            "before": [
                "<Tab>"
            ],
            "after": [
                "g",
                "t"
            ]
        },
        {
            "before": [
                "<s-Tab>"
            ],
            "after": [
                "g",
                "T"
            ]
        }
    ],
    "vim.insertModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<C-u>"
            ],
            "after": [
                "<Esc>",
                "I"
            ]
        },
        {
            "before": [
                "<C-i>"
            ],
            "after": [
                "<Esc>",
                "A"
            ]
        },
        {
            "before": [
                "<C-d>"
            ],
            "commands": [
                "editor.action.moveSelectionToNextFindMatch"
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                ">"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": [
                "<"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        },
        {
            "before": [
                "Y"
            ],
            "commands": [
                "editor.action.clipboardCopyAction"
            ]
        },
        {
            "before": [
                "j"
            ],
            "after": [
                "g",
                "j"
            ]
        },
        {
            "before": [
                "k"
            ],
            "after": [
                "g",
                "k"
            ]
        }
    ],
    "telemetry.enableTelemetry": false,
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "files.associations": {
        "Bookmarks": "json",
        "_vimrc": "viml",
        "_gvimrc": "viml",
        "*.vssettings": "xml",
        "vimrc": "viml"
    },
    "http.proxySupport": "off",
    "indentRainbow.excludedLanguages": [
        "plaintext"
    ],
    "hediet.vscode-drawio.local-storage": "eyIuZHJhd2lvLWNvbmZpZyI6IntcImxhbmd1YWdlXCI6XCJcIixcImN1c3RvbUZvbnRzXCI6W10sXCJsaWJyYXJpZXNcIjpcImdlbmVyYWw7dW1sO2VyO2JwbW47Zmxvd2NoYXJ0O2Jhc2ljO2Fycm93czJcIixcImN1c3RvbUxpYnJhcmllc1wiOltcIkwuc2NyYXRjaHBhZFwiXSxcInBsdWdpbnNcIjpbXSxcInJlY2VudENvbG9yc1wiOltcIkZGRkZGRlwiLFwiMDAwMDAwXCIsXCJGRjgwMDBcIixcIkZGNjY2NlwiXSxcImZvcm1hdFdpZHRoXCI6MjQwLFwiY3JlYXRlVGFyZ2V0XCI6ZmFsc2UsXCJwYWdlRm9ybWF0XCI6e1wieFwiOjAsXCJ5XCI6MCxcIndpZHRoXCI6ODI3LFwiaGVpZ2h0XCI6MTE2OX0sXCJzZWFyY2hcIjp0cnVlLFwic2hvd1N0YXJ0U2NyZWVuXCI6dHJ1ZSxcImdyaWRDb2xvclwiOlwiI2UwZTBlMFwiLFwiZGFya0dyaWRDb2xvclwiOlwiI0FCQTRBOVwiLFwiYXV0b3NhdmVcIjp0cnVlLFwicmVzaXplSW1hZ2VzXCI6bnVsbCxcIm9wZW5Db3VudGVyXCI6MCxcInZlcnNpb25cIjoxOCxcInVuaXRcIjoxLFwiaXNSdWxlck9uXCI6ZmFsc2UsXCJ1aVwiOlwiXCJ9In0=",
    "markdownShortcuts.icons.bold": false,
    "markdownShortcuts.icons.bullets": false,
    "markdownShortcuts.icons.italic": false,
    "markdownShortcuts.icons.strikethrough": false,
    "markdownShortcuts.italics.marker": "*",
    "latex-workshop.view.pdf.viewer": "external",
    "debug.showBreakpointsInOverviewRuler": true,
    "tabnine.experimentalAutoImports": true,
    "remote-github.keystorePath": "C:\\Users\\younger\\Github\\GithubKeyStore.txt",
    "remote-github.mountPoint": "C:\\Users\\younger\\",
    "java.format.comments.enabled": false,
    "java.server.launchMode": "LightWeight",
    "java.help.firstView": "gettingStarted",
    "java.configuration.maven.userSettings": "C:\\Users\\younger\\scoop\\apps\\maven\\current\\conf\\settings.xml",
    "java.configuration.checkProjectSettingsExclusions": false,
    "java.codeGeneration.generateComments": true,
    "java.completion.guessMethodArguments": true,
    "java.refactor.renameFromFileExplorer": "preview",
    "java.project.importOnFirstTimeStartup": "automatic",
    "open-in-vim.restoreCursorAfterVim": true,
    "rust-analyzer.debug.engine": "vadimcn.vscode-lldb",
    "rust-analyzer.serverPath": "C:/Users/younger/scoop/apps/rust-analyzer/current/rust-analyzer.exe",
    "lldb.adapterEnv": {
        "PYTHONHOME": "C:\\Users\\younger\\scoop\\apps\\miniconda3\\current"
    },
    "files.watcherExclude": {
        "**/.bloop": true,
        "**/.metals": true,
        "**/.ammonite": true
    },
    "projectManager.groupList": true,
    "debug.toolBarLocation": "docked",
    "window.menuBarVisibility": "toggle",
    "background.useDefault": false,
    "background.enabled": false,
    "background.customImages": [
        "file:///C:/Users/younger/Pictures/锁屏壁纸/sea_bright_starry_islands.jpg",
        "file:///C:/Users/younger/Pictures/桌面壁纸/half_forest_half_sea.jpg",
        "file:///C:/Users/younger/Pictures/锁屏壁纸/rocky_mountain_night.jpg",
    ],
    "background.styles": [
        {
            "pointer-events": "none",
            "position": "absolute",
            "z-index": "99999",
            "width": "100%",
            "height": "100%",
            "background-position": "0% 0%",
            "background-size": "cover",
            "background-repeat": "no-repeat",
            "opacity": 0.1,
        },
        {
            "pointer-events": "none",
            "position": "absolute",
            "z-index": "99999",
            "width": "100%",
            "height": "100%",
            "background-position": "0% 0%",
            "background-size": "cover",
            "background-repeat": "no-repeat",
            "opacity": 0.1,
        },
        {
            "pointer-events": "none",
            "position": "absolute",
            "z-index": "99999",
            "width": "100%",
            "height": "100%",
            "background-position": "0% 0%",
            "background-size": "cover",
            "background-repeat": "no-repeat",
            "opacity": 0.1,
        }
    ],
    "[markdown]": {
        "editor.wordWrap": "on",
        "editor.renderWhitespace": "all",
        "editor.acceptSuggestionOnEnter": "off",
        "editor.quickSuggestions": true
    },
    "js/ts.implicitProjectConfig.checkJs": false,
    "screencastMode.fontSize": 35,
    "scm.inputFontFamily": "editor",
    "breadcrumbs.enabled": true,
    "sync.removeExtensions": false,
    "path-autocomplete.triggerOutsideStrings": true,
    "files.defaultLanguage": "${activeEditorLanguage}",
    "zenMode.hideStatusBar": false,
    "zenMode.hideLineNumbers": false,
    "todo-tree.tree.showScanModeButton": false,
    "open-in-vim.integrated-terminal.pathToShell": "C:\\Users\\younger\\scoop\\apps\\git\\current\\bin\\bash.exe",
    "vim.neovimPath": "C:\\Users\\younger\\scoop\\shims\\nvim.exe",
    "timeline.excludeSources": [],
    "diffEditor.codeLens": true,
    "git.enableSmartCommit": true,
    "oneDarkPro.bold": true,
    "oneDarkPro.vivid": true,
    "code-runner.runInTerminal": true,
    "code-runner.saveFileBeforeRun": true,
    "code-runner.showRunIconInEditorTitleMenu": false,
    "code-runner.showRunCommandInExplorerContextMenu": false,
    "code-runner.customCommand": "say \"帅\" & cowsay \"So handsome\"",
    "code-runner.executorMap": {
        "javascript": "node",
        "java": "cd $dir && javac $fileName && java $fileNameWithoutExt",
        // "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        // "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "c": "cd $dir && clang $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && clang++ -std=c++17 $fileName -o $fileNameWithoutExt.exe && $dir$fileNameWithoutExt.exe",
        "objective-c": "cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "php": "php",
        "python": "python -u",
        "ruby": "ruby",
        "go": "go run",
        "lua": "lua",
        "powershell": "powershell -ExecutionPolicy ByPass -File",
        "bat": "cmd /c",
        "shellscript": "bash",
        "fsharp": "fsi",
        "csharp": "scriptcs",
        "typescript": "ts-node",
        "scala": "scala",
        "julia": "julia",
        "rust": "cd $dir && rustc $fileName && $dir$fileNameWithoutExt",
        "scheme": "csi -script",
        "ahk": "autohotkey",
        "dart": "dart",
        "pascal": "cd $dir && fpc $fileName && $dir$fileNameWithoutExt",
        "d": "cd $dir && dmd $fileName && $dir$fileNameWithoutExt",
        "haskell": "runhaskell",
        "nim": "nim compile --verbosity:0 --hints:off --run",
        "lisp": "sbcl --script",
        "kit": "kitc --run",
        "sass": "sass --style expanded",
        "scss": "scss --style expanded",
        "less": "cd $dir && lessc $fileName $fileNameWithoutExt.css",
    },
    "python.languageServer": "Pylance",
    "python.autoComplete.addBrackets": true,
    "python.analysis.completeFunctionParens": true,
    // "python.condaPath": "C:/Users/younger/scoop/apps/miniconda3/current/Scripts",
    "python.linting.flake8Enabled": true,
    "python.linting.flake8Args": [
        "--max-line-length=100",
        // F851:unused variable, E501:line too long, F401:unused import, E302:two blacnk lines, W391:blank line at end, 
        // E203:whitespace before ':', E402:import not at top of file, W292:no newline at end of file
        "--extend-ignore=F841,E501,F401,E302,W391,E203,E402,W292"
    ],
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": [
        "--line-length",
        "100"
    ],
    "jupyter.alwaysTrustNotebooks": true,
    "[rust]": {
        "editor.defaultFormatter": "matklad.rust-analyzer"
    },
    "todo.embedded.regex": "(?:<!-- *)?(?:#|// @|//|/\\*+|<!--|--|\\* @|\\{!|\\{\\{!--|\\{\\{!) *(MYDO|TODO|FIXME|FIX|BUG|UGLY|HACK|NOTE|IDEA|REVIEW|DEBUG|OPTIMIZE)(?:\\s*\\([^)]+\\))?:?(?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|\\{!|\\{\\{!--|\\{\\{!))|((?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|\\{!|\\{\\{!--|\\{\\{!))|(?: +[^@\\n]+)?))",
    "markdownlint.config": {
        "default": true,
        "MD013": false,
        "MD004": {
            "style": "consistent"
        },
        "MD012": {
            "maximum": 6
        },
        "MD022": {
            "lines_above": 3,
            "lines_below": 1
        },
        "MD041": false,
        "MD033": false,
        "MD045": false,
        "MD040": false
    },
    "projectManager.any.ignoredFolders": [
        "node_modules",
        "out",
        "typings",
        "test",
        ".git",
        ".settings",
        ".vscode",
        "bin",
        "src",
        "obj",
        "debug",
        "Debug",
        "target"
    ],
    "go.useLanguageServer": true,
    "glassit.alpha": 245,
    "editor.rulers": [
        120
    ],
    "[git-commit]": {
        "editor.rulers": [
            50
        ],
        "workbench.editor.restoreViewState": false
    },
    "[python]": {
        "editor.rulers": [
            80,
        ]
    },
    "liveServer.settings.donotShowInfoMsg": true,
    "window.autoDetectColorScheme": true,
    "workbench.preferredDarkColorTheme": "One Monokai",
    "workbench.preferredLightColorTheme": "Atom One Light",
    "sqltools.historySize": 500,
    "[sql]": {
        "editor.defaultFormatter": "adpyke.vscode-sql-formatter"
    },
    "sqltools.format": {
        "language": "sql",
        "linesBetweenQueries": 2,
        "reservedWordCase": "upper"
    },
    "extensions.ignoreRecommendations": false,
    "hediet.vscode-drawio.theme": "automatic",
    "gitlens.gitCommands.skipConfirmations": [
        "fetch:command",
        "stash-push:command",
        "switch:command",
        "switch:menu"
    ],
    "gitlens.defaultDateFormat": "YYYY-MM-DD, hh:mma",
    "gitlens.defaultDateShortFormat": "YYYY-MM-DD",
    "gitlens.views.commits.avatars": false,
    "gitlens.views.fileHistory.avatars": false,
    "gitlens.codeLens.scopes": [
        "document",
        "containers",
        "blocks"
    ],
    "git-graph.showStatusBarItem": false,
    "powermode.enabled": false,
    "powermode.presets": "flames",
    "cloudmusic.account.autoCheck": true,
    "workbench.statusBar.visible": true,
    "markdown.marp.exportType": "html",
    "markdown.marp.toolbarButtonForQuickPick": false,
    "bookmarks.gutterIconPath": "C:\\Users\\younger\\vue.svg",
    "editor.acceptSuggestionOnEnter": "off",
    "yaml.format.enable": false,
    "editor.suggestSelection": "first",
    "workbench.productIconTheme": "material-product-icons",
    "workbench.editorAssociations": [
        {
            "viewType": "jupyter.notebook.ipynb",
            "filenamePattern": "*.ipynb"
        }
    ],
    "snippet.verbose": true,
    "shellformat.path": "C:/Users/younger/scoop/apps/shfmt/current/shfmt.exe",
    "workbench.colorTheme": "One Monokai",
    "go.toolsManagement.autoUpdate": true,
    "gitlens.mode.active": "zen",
    "vsicons.dontShowNewVersionMessage": true,
}